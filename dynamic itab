
      DATA:
    ls_cob_pro        TYPE rsd_s_cob_pro,
    lt_components     TYPE abap_component_tab,
    ls_component      TYPE abap_componentdescr,
    lr_struct_descr   TYPE REF TO cl_abap_structdescr,
    lr_table_descr    TYPE REF TO cl_abap_tabledescr.

    FIELD-SYMBOLS:
                   <fs_component>   TYPE  abap_componentdescr,
                   <o_data>         TYPE STANDARD TABLE,
                   <field>          TYPE  any.
                   
      " Todo: Evt loop über Liste mit InfoObjekten
      
           " Alle Informationen zum InfoObject holen
            CALL FUNCTION 'RSD_IOBJ_GET'
              EXPORTING
                i_iobjnm    = '0Plant'
              IMPORTING
                e_s_cob_pro = ls_cob_pro.
                
          " erstellt eine Struktur mit InfoObjekt und Datentyp.
          ls_component-name   = ls_cob_pro-fieldnm.
          ls_component-type   ?= cl_abap_elemdescr=>describe_by_name( ls_cob_pro-dtelnm ).
          INSERT ls_component INTO TABLE lt_components.
    
    " Todo: Ende Loop über Liste mit InfoObjekten
    
    " einen Typ auf der oben definierten Struktur lt_compnents erstellen.
    lr_struct_descr ?= cl_abap_structdescr=>create( p_components = lt_components ).

    " eine interne Tabelle auf der Basis des generierten Typ beschreiben.
    lr_table_descr ?= cl_abap_tabledescr=>create( p_line_type  = lr_struct_descr ).

    " Die Referenz pr_data (Attribut) auf Basis des neuen Typ erstellen.
    " Auf die Referenz (Daten) pr_data wird auch aus der Subklasse zugegriffen daher wird dies als Attribut erstellt.
    CREATE DATA me->pr_data   TYPE HANDLE lr_table_descr.

    " Die Referenz zu der internen Tabelle verknüpfen
    ASSIGN pr_data->*     TO <o_data>.
    
    
    
